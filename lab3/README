README for Assignment 3
===========================================
|  Scott Harvey     cse533-11  108272691  |
|  Michael Salerno  cse533-8   xxxxxxxxx  |
===========================================

When running the client and ODR the user can type ^D to terminate.
The server doesn't have that.


Special Cases:
 If two clients on a VM1 both msg_send to vm5, and vm1 has no route to vm5,
 then both msg_send()'s will generate an RREQ. We feel this is not an problem.

=======================
Outline of ODR Program:
=======================
select(unixfd/rawfd):
  unixfd:
    1. Local dst IP: Forward to local dst port.
    2. Remote dst IP:
        a. get_route(dst_IP)
            - no route/stale/f_redisc:    send RREQ over rawfd
            - had a route:                send DATA over rawfd

  rawfd:
    * RREQ: see ODR Overview
    * RREP: see ODR Overview
    * DATA: see ODR Overview

==============
Routing Table:
==============
_______________________________________________________________________
| DestIP | BroadcastID | NextHop(MAC) | IfIndex | NumHops | Timestamp |
-----------------------------------------------------------------------



==========================================
============== ODR Overview ==============
==========================================

On RREQ received (Overview):
============================
1. If we are the dest node OR we have a non-stale route to dest.
    * Then we RREP.

2. Else we send RREQ on all interfaces except the one the RREQ arrived on.


On RREQ received (Detailed):
============================
1. Update Reverse Route in routing table:
    a. Always do: route.broadcast_id = RREQ.broadcast_id ?????
    b. If RREQ.hops <= route.hops || RREQ.f_redisc then update route.
        1. Update the NxtHop to the src MAC in the sockaddr_ll.
    * Set NEW_ROUTE if no prev route to src or route was stale.
    * Set EFF_ROUTE if RREQ.hops < route.hops (more efficient route).

if(RREQ.broadcast_id > route.broadcast_id || EFF_ROUTE):
    2. RREP generation.
        Only if(RREQ.rrep_sent == 0 && (RREQ.f_redisc == 0 || i_am_dest)):
        a. If I have route to RREQ.dst_ip then send RREP
        b. If I am dest and RREQ.f_redisc, keep RREQ.f_redisc set

    3. RREQ flooding. Only if(!we_sent_RREP || (NEW_ROUTE || EFF_ROUTE)):
        a. If we sent RREP, set the RREQ.rrep_sent flag.
        b. Send RREQ on all interfaces except the source interface.


On RREP received (Detailed):
============================
1.  If the RREP was not for you, relay it using the path in the table
    that was added when the corresponding RREQ was received.

2.  Add/Update the path to the destination. If the route is suboptimal,
    DO NOT update the table and DO NOT relay the information to the destination.

?.  "maintaining a route and its associated timestamp in
    the table in response to RREPs received is done in the same manner described
    above for RREQs."

On DATA received (Detailed):
===================================
1.  make sure to add the path to the source to the table.
    WILL LOSE POINTS

On ANYTHING transmitted (Detailed):
===================================
1.  if (now >= ts || FLAGS || missing): send RREQ then send
    else: update the ts and send
